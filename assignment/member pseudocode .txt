DECLARE user_id[], password[], borrowed_books[]
IMPORT datetime, timedelta

INITIALIZE users = [
    {user_id: 1, password: "123"},
    {user_id: 2, password: "123"}
]

----------------------------------------------------------
FUNCTION loginpage()
    INPUT USER_ID_TEMP
    INPUT PASSWORD_TEMP
    SET login_success = False

    FOR each user IN users
        IF USER_ID_TEMP == user.user_id AND PASSWORD_TEMP == user.password THEN
            PRINT "Login Successful!"
            SET login_success = True
            CALL member_interface()
            BREAK
        END IF
    END FOR

    IF login_success == False THEN
        PRINT "ERROR: Invalid ID or Password."
        CALL loginpage()
    END IF
END FUNCTION
----------------------------------------------------------

FUNCTION member_interface()
    PRINT menu options:
        1. Search by Book Name
        2. Search by Book ID
        3. View Borrowed History
        4. Log Out
    INPUT choice

    IF choice == 1 THEN
        CALL searchbookname()
    ELSE IF choice == 2 THEN
        CALL searchbookid()
    ELSE IF choice == 3 THEN
        CALL borrowhistory()
    ELSE IF choice == 4 THEN
        PRINT "Goodbye!"
    ELSE
        PRINT "Invalid choice"
        CALL member_interface()
    END IF
END FUNCTION
----------------------------------------------------------

FUNCTION read_books_from_file()
    INITIALIZE books = []
    OPEN "book.txt" FOR reading

    FOR each line IN file
        SPLIT line BY "," INTO (book_id, book_name, language, available, author)
        ADD {
            book_id: book_id,
            book_name: book_name,
            language: language,
            number_of_book_available: INTEGER(available),
            author: author
        } TO books
    END FOR

    CLOSE file
    RETURN books
END FUNCTION
----------------------------------------------------------

FUNCTION write_books_to_file(books)
    OPEN "book.txt" FOR writing
    FOR each book IN books
        WRITE book.book_id, book.book_name, book.language, 
              book.number_of_book_available, book.author TO file
    END FOR
    CLOSE file
END FUNCTION
----------------------------------------------------------

FUNCTION searchbookname()
    INPUT bookname
    books = read_books_from_file()
    SET found = False

    FOR each book IN books
        IF LOWER(bookname) == LOWER(book.book_name) THEN
            SET found = True
            IF book.number_of_book_available > 0 THEN
                PRINT book details (name, author, language)
                INPUT CHOICE (1 = Borrow, 2 = Exit)

                IF CHOICE == 1 THEN
                    DECREASE book.number_of_book_available BY 1
                    CALL write_books_to_file(books)

                    SET borrow_date = current date
                    SET due_date = borrow_date + 7 days

                    ADD {
                        book_name: book.book_name,
                        book_id: book.book_id,
                        borrow_date: borrow_date,
                        due_date: due_date
                    } TO borrowed_books

                    PRINT confirmation and due date
                ELSE
                    PRINT "Returning to member page..."
                    CALL member_interface()
                END IF
            ELSE
                PRINT "Book is not available right now."
            END IF
            BREAK
        END IF
    END FOR

    IF found == False THEN
        PRINT "Book not found."
    END IF

    CALL member_interface()
END FUNCTION
----------------------------------------------------------

FUNCTION searchbookid()
    INPUT bookid
    books = read_books_from_file()
    SET found = False

    FOR each book IN books
        IF LOWER(bookid) == LOWER(book.book_id) THEN
            SET found = True
            IF book.number_of_book_available > 0 THEN
                PRINT book details (name, author, language)
                INPUT CHOICE (1 = Borrow, 2 = Exit)

                IF CHOICE == 1 THEN
                    DECREASE book.number_of_book_available BY 1
                    CALL write_books_to_file(books)

                    SET borrow_date = current date
                    SET due_date = borrow_date + 7 days

                    ADD {
                        book_name: book.book_name,
                        book_id: book.book_id,
                        borrow_date: borrow_date,
                        due_date: due_date
                    } TO borrowed_books

                    PRINT confirmation and due date
                ELSE
                    PRINT "Returning to member page..."
                    CALL member_interface()
                END IF
            ELSE
                PRINT "Book is not available right now."
            END IF
            BREAK
        END IF
    END FOR

    IF found == False THEN
        PRINT "Book not found."
    END IF

    CALL member_interface()
END FUNCTION
----------------------------------------------------------

FUNCTION borrowhistory()
    IF borrowed_books IS EMPTY THEN
        PRINT "You have not borrowed any books yet."
    ELSE
        PRINT "Borrowed Books:"
        FOR each record IN borrowed_books
            PRINT record.book_name, record.book_id
            PRINT record.borrow_date, record.due_date
        END FOR
    END IF
END FUNCTION
----------------------------------------------------------

# MAIN PROGRAM
CALL loginpage()
